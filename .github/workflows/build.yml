name: "build"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GODOT_VERSION: 3.5.2
  EXPORT_NAME: Lorien
  LORIEN_VERSION: v0.6.0-dev

jobs:
  windows-export:
    name: Windows Export
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:3.5.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        run: |
          mkdir -v -p build/${EXPORT_NAME}_${LORIEN_VERSION}_Windows
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: | 
          cd lorien
          godot -v --export "Windows Desktop" ../build/${EXPORT_NAME}_${LORIEN_VERSION}_Windows/${EXPORT_NAME}_${LORIEN_VERSION}.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Lorien Windows
          path: build/${{ env.EXPORT_NAME }}_${{ env.LORIEN_VERSION }}_Windows
          retention-days: 14

  linux-export:
    name: Linux Export
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:3.5.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        run: |
          mkdir -v -p build/${EXPORT_NAME}_${LORIEN_VERSION}_Linux
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: | 
          cd lorien
          godot -v --export "Linux/X11" ../build/${EXPORT_NAME}_${LORIEN_VERSION}_Linux/${EXPORT_NAME}_${LORIEN_VERSION}.x86_64
          # Prepare AppImage
          cp -r ../build/${EXPORT_NAME}_${LORIEN_VERSION}_Linux lorien.AppDir
          cd ./*AppDir && mkdir -p ./usr/share/applications && mkdir -p ./usr/bin
          mv Lorien* ./usr/bin && mv ./usr/bin/Lorien*64 ./usr/bin/Lorien
          DESKTOP="https://raw.githubusercontent.com/mbrlabs/Lorien/main/public/linux/com.github.mbrlabs.Lorien.desktop"
          ICON="https://raw.githubusercontent.com/mbrlabs/Lorien/main/art/logo.svg"
          wget -q "$DESKTOP" -O ./usr/share/applications/com.github.mbrlabs.Lorien.desktop || exit 1
          wget -q "$ICON" -O ./com.github.mbrlabs.Lorien.svg || exit 1
          ln -s usr/share/applications/*desktop ./ && ln -s ./*.svg ./.DirIcon || exit 1
          printf '#!/bin/sh\nCURRENTDIR="$(readlink -f "$(dirname "$0")")"\n' > ./AppRun
          printf 'exec "$CURRENTDIR"/usr/bin/Lorien "$@"\n' >> ./AppRun
          chmod a+x ./AppRun

          # Make AppImage
          cd ..
          APPIMAGETOOL=$(wget -q https://api.github.com/repos/probonopd/go-appimage/releases -O - \
          | sed 's/[()",{} ]/\n/g' | grep -oi 'https.*continuous.*tool.*86_64.*mage$')
          export ARCH=x86_64
          export VERSION=${{ env.LORIEN_VERSION }}
          wget -q "$APPIMAGETOOL" -O ./appimagetool && chmod a+x ./appimagetool || exit 1
          ./appimagetool -s ./*.AppDir --appimage-extract-and-run || exit 1
          mv *AppImage ../build/${EXPORT_NAME}_${LORIEN_VERSION}_Linux/${EXPORT_NAME}_${LORIEN_VERSION}.x86_64.AppImage
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Lorien Linux
          path: build/${{ env.EXPORT_NAME }}_${{ env.LORIEN_VERSION }}_Linux
          retention-days: 14

  mac-export:
    name: Mac Export
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:3.5.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        run: |
          mkdir -v -p build/${EXPORT_NAME}_${LORIEN_VERSION}_Mac
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: | 
          cd lorien
          godot -v --export "Mac OSX" ../build/${EXPORT_NAME}_${LORIEN_VERSION}_Mac/${EXPORT_NAME}_${LORIEN_VERSION}.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Lorien Mac
          path: build/${{ env.EXPORT_NAME }}_${{ env.LORIEN_VERSION }}_Mac
          retention-days: 14
